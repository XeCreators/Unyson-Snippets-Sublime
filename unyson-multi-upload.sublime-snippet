<snippet>
	<content><![CDATA[
'${1:option_id}' => array(
    'type'  => 'multi-upload',
    'value' => array(
        {2:/*
        array(
            'attachment_id' => '9',
            'url' => '//site.com/wp-content/uploads/2014/02/whatever.jpg'
        ),
        // more here....
        */}
        // if value is set in code, it is not considered and not used
        // because there is no sense to set hardcode attachment_id
    ),
    'attr'  => array( ${3:'class' => 'custom-class', 'data-foo' => 'bar'} ),
    'label' => __('${4:Label}', 'fw'),
    'desc'  => __('${5:Description}', 'fw'),
    'help'  => __('${6:Help tip}', 'fw'),
    /**
     * If set to `true`, the option will allow to upload only images, and display a thumb of the selected one.
     * If set to `false`, the option will allow to upload any file from the media library.
     */
    'images_only' => ${7:true},
    /**
     * An array with allowed files extensions what will filter the media library and the upload files.
     */
    'files_ext' => array( ${8:'doc', 'pdf', 'zip'} ),
    /**
     * An array with extra mime types that is not in the default array with mime types from the javascript Plupload library.
     * The format is: array( '<mime-type>, <ext1> <ext2> <ext2>' ).
     * For example: you set rar format to filter, but the filter ignore it , than you must set
     * the array with the next structure array( '.rar, rar' ) and it will solve the problem.
     */
    'extra_mime_types' => array( '${9:audio/x-aiff, aif aiff}' )
), // ${1:option_id}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>unyson-multi-upload</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php</scope>
</snippet>
